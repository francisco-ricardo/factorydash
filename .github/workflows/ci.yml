name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: factorydash
          POSTGRES_USER: factorydash
          POSTGRES_PASSWORD: factorydash
        ports:
          - 5433:5432  # Use port 5433 on the host to avoid conflict with local PostgreSQL
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6380:6379  # Use port 6380 on the host to avoid conflict with local Redis

    env:
      DATABASE_URL: postgres://factorydash:factorydash@localhost:5433/factorydash
      CELERY_BROKER_URL: redis://localhost:6380/0
      DJANGO_SETTINGS_MODULE: factorydash.settings_test

    steps:
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=/factorydash/app/factorydash" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Ensure log directory exists
      run: |
        mkdir -p /factorydash/app/factorydash/logs

    - name: Run migrations
      run: |
        python ./app/factorydash/manage.py migrate

    - name: Run tests
      run: |
        python ./app/factorydash/manage.py test

    - name: Build Docker container
      run: |
        docker build -t factorydash .

    - name: Remove existing Docker container if exists
      run: |
        docker rm -f factorydash_container || true

    - name: Run Docker container
      run: |
        docker run -d --name factorydash_container --network host -p 8001:8000 factorydash  # Use port 8001 on the host to avoid conflict with local Django

    - name: Wait for Docker container to be ready
      run: |
        sleep 10  # Wait for the container to be fully up and running

    - name: Check Docker container status
      run: |
        docker ps -a

    - name: Check PostgreSQL service status
      run: |
        docker exec -it factorydash_container bash -c "pg_isready -h localhost -p 5433 -U factorydash"

    - name: Run Celery worker
      run: |
        docker exec -d factorydash_container celery -A factorydash worker --loglevel=info

    - name: Run Celery beat
      run: |
        docker exec -d factorydash_container celery -A factorydash beat --loglevel=info

    - name: Run tests in Docker container
      run: |
        docker exec -it factorydash_container bash -c "cd /factorydash/app/factorydash && python manage.py test"

    - name: Run pytest in Docker container
      run: |
        docker exec -it factorydash_container bash -c "cd /factorydash/app/factorydash && pytest"
