name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://factorydash:factorydash@postgres:5432/factorydash
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: factorydash.settings

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.2'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Docker Compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose

      - name: Start services
        run: docker compose up -d

      - name: Build Docker container
        run: |
          docker build -t factorydash .

      - name: Remove existing Docker container if exists
        run: |
          docker rm -f factorydash_container || true

      - name: Run Docker container
        run: |
          docker run -d --name factorydash_container -p 8000:8000 factorydash

      - name: Wait for Docker container to be ready
        run: |
          sleep 10 # Wait for the container to be fully up and running

      - name: Wait for PostgreSQL to be ready inside Docker
        run: |
          docker exec -it factorydash_container bash -c "until pg_isready -h postgres -p 5432 -U factorydash; do sleep 5; done"

      - name: Run migrations in Docker container
        run: |
          docker exec -it factorydash_container bash -c "cd /factorydash/app/factorydash && python manage.py migrate"

      - name: Run tests in Docker container
        run: |
          docker exec -it factorydash_container bash -c "cd /factorydash/app/factorydash && python manage.py test"

      - name: Run pytest in Docker container
        run: |
          docker exec -it factorydash_container bash -c "cd /factorydash/app/factorydash && pytest"

      - name: Run Celery worker
        run: |
          docker exec -d factorydash_container celery -A factorydash worker --loglevel=info

      - name: Run Celery beat
        run: |
          docker exec -d factorydash_container celery -A factorydash beat --loglevel=info

      - name: Check Docker container status
        run: |
          docker ps -a