
services:

  factorydash.dev:
    container_name: factorydash.dev
    image: factorydash.dev:latest
    restart: no
    build: 
      context: .
      dockerfile: .devcontainer/Dockerfile
    working_dir: /factorydash/app/factorydash
    volumes:
      - .:/factorydash
    ports:
      - "8000:8000"
    env_file:
      - .env.factorydash.dev
    depends_on:
      postgres.dev:
        condition: service_healthy
      redis.dev:
        condition: service_healthy

  celery_worker.dev:
    container_name: factorydash.celery_worker.dev
    image: factorydash.dev:latest
    restart: no
    command: celery -A factorydash worker --loglevel=info
    volumes:
      - .:/factorydash
    env_file:
      - .env.factorydash.dev
    depends_on:
      - factorydash.dev
      - redis.dev

  celery_beat.dev:
    container_name: factorydash.celery_beat.dev
    image: factorydash.dev:latest
    restart: no
    command: celery -A factorydash beat --loglevel=info
    volumes:
      - .:/factorydash
    env_file:
      - .env.factorydash.dev
    depends_on:
      - factorydash.dev
      - redis.dev

  postgres.dev:
    container_name: factorydash.postgres.dev
    image: postgres:latest
    restart: no
    ports:
      - "5432:5432"
    volumes:
      - factorydash.dev_postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.postgres.dev            
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "factorydash"]
      interval: 10s
      timeout: 5s
      retries: 5      

  redis.dev:
    container_name: factorydash.redis.dev
    image: redis:latest
    restart: no
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  factorydash.dev_postgres_data:
    name: factorydash.dev_postgres_data
